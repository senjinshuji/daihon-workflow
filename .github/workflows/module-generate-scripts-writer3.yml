name: module-generate-scripts-writer3

on:
  workflow_call:
    inputs:
      product_name:
        required: true
        type: string
      loop_number:
        required: false
        type: string
        default: '1'
    outputs:
      scripts_generated:
        value: ${{ jobs.generate.outputs.scripts_generated }}
    secrets:
      anthropic_api_key:
        required: true

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      scripts_generated: ${{ steps.generate-scripts.outputs.count }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm install -g @anthropic-ai/claude-code
      
      - name: Download required artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./
      
      - name: Organize downloaded artifacts
        run: |
          # Create necessary directories including loop-specific directory
          mkdir -p "${{ inputs.product_name }}/writers" "${{ inputs.product_name }}/personas" "${{ inputs.product_name }}/artifacts" "${{ inputs.product_name }}/bulk_scripts/loop_${{ inputs.loop_number }}"
          
          # Move writers
          if [ -d "${{ inputs.product_name }}-writers" ]; then
            cp -r "${{ inputs.product_name }}-writers"/* "${{ inputs.product_name }}/writers/" 2>/dev/null || true
          fi
          
          # Move personas
          if [ -d "${{ inputs.product_name }}-personas" ]; then
            cp -r "${{ inputs.product_name }}-personas"/* "${{ inputs.product_name }}/personas/" 2>/dev/null || true
          fi
          
          # Move analysis and criteria
          if [ -d "${{ inputs.product_name }}-analysis" ]; then
            cp -r "${{ inputs.product_name }}-analysis"/* "${{ inputs.product_name }}/artifacts/" 2>/dev/null || true
          fi
          if [ -d "${{ inputs.product_name }}-criteria" ]; then
            cp -r "${{ inputs.product_name }}-criteria"/* "${{ inputs.product_name }}/artifacts/" 2>/dev/null || true
          fi
          
          # Move target analysis
          for i in 1 2 3; do
            if [ -d "${{ inputs.product_name }}-target${i}" ]; then
              cp -r "${{ inputs.product_name }}-target${i}"/* "${{ inputs.product_name }}/artifacts/" 2>/dev/null || true
            fi
          done
      
      - id: generate-scripts
        env:
          ANTHROPIC_API_KEY: ${{ secrets.anthropic_api_key }}
        run: |
          echo "üé¨ Generating Writer3 scripts for ${{ inputs.product_name }}..."
          
          # Â§ñÈÉ®„Éó„É≠„É≥„Éó„Éà„Éï„Ç°„Ç§„É´„ÅÆË™≠„ÅøËæº„Åø
          if [ -f ".github/prompts/generation/generate_scripts.txt" ]; then
            PROMPT=$(cat .github/prompts/generation/generate_scripts.txt)
          else
            echo "::error::Prompt file not found: .github/prompts/generation/generate_scripts.txt"
            exit 1
          fi
          
          # „Éó„É¨„Éº„Çπ„Éõ„É´„ÉÄ„Éº„ÅÆÁΩÆÊèõ
          PROMPT="${PROMPT//\{PRODUCT_NAME\}/${{ inputs.product_name }}}"
          PROMPT="${PROMPT//\{WRITER_NAME\}/writer3}"
          PROMPT="${PROMPT//\{OUTPUT_DIR\}/${{ inputs.product_name }}/bulk_scripts/loop_${{ inputs.loop_number }}}"
          
          # „É™„Éà„É©„Ç§„É≠„Ç∏„ÉÉ„ÇØÔºàÊúÄÂ§ß3ÂõûË©¶Ë°åÔºâ
          for attempt in 1 2 3; do
            echo "üîÑ Attempt $attempt of 3 for Writer3..."
            
            npx @anthropic-ai/claude-code \
              --allowedTools "Read,Write" \
              --max-turns 30 \
              --verbose \
              --permission-mode "acceptEdits" \
              -p "$PROMPT" && break
            
            # Â§±ÊïóÊôÇ„ÅÆÂá¶ÁêÜ
            if [ $attempt -lt 3 ]; then
              echo "‚è≥ API call failed. Waiting 30 seconds before retry..."
              sleep 30
            else
              echo "‚ùå Failed after 3 attempts"
            fi
          done
          
          # ÁîüÊàêÊï∞„Ç´„Ç¶„É≥„ÉàÔºàWriter3„ÅÆ„Åø„ÄÅÁèæÂú®„ÅÆ„É´„Éº„Éó„ÅÆ„ÅøÔºâ
          if [ -d "${{ inputs.product_name }}/bulk_scripts/loop_${{ inputs.loop_number }}" ]; then
            COUNT=$(ls -1 "${{ inputs.product_name }}/bulk_scripts/loop_${{ inputs.loop_number }}/writer3_"*.md 2>/dev/null | wc -l)
            echo "count=$COUNT" >> $GITHUB_OUTPUT
            echo "‚úÖ Writer3 scripts generated in loop ${{ inputs.loop_number }}: $COUNT"
          else
            echo "count=0" >> $GITHUB_OUTPUT
            echo "‚ùå No Writer3 scripts generated in loop ${{ inputs.loop_number }}"
          fi
      
      - name: Upload generated scripts
        if: steps.generate-scripts.outputs.count != '0'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.product_name }}-scripts-writer3
          path: ${{ inputs.product_name }}/bulk_scripts/loop_${{ inputs.loop_number }}/writer3_*.md
          retention-days: 1
